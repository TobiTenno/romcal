import {
  Color,
  Period,
  Precedence,
  ProperCycle,
  PsalterWeekCycle,
  Rank,
  Season,
} from '../constants';
import { CalendarId } from './calendar-def';
import { DateDef, DateDefException, DateDefInput } from './date-def';
import { i18nDef, LocaleKey } from './locale';
import { MartyrologyItem, MartyrologyItemPointer, RomcalTitle, TitlesDef } from './martyrology';

/**
 * Liturgical day identifier.
 * @pattern ^[a-z\d]+(_[a-z\d]+)*$
 */
export type LiturgicalDayId = string;

export type LiturgicalDayDefInputMap = Record<LiturgicalDayId, LiturgicalDayDefInput>;

/**
 * A liturgical day definition.
 */
export type LiturgicalDayDef = {
  liturgicalDayId: LiturgicalDayId;

  /**
   * Date definition
   */
  dateDef?: DateDef;

  /**
   * Date definition exception
   * @uniqueItems true
   */
  dateExceptions?: DateDefException[];

  /**
   * The precedence type of the liturgical day.
   */
  precedence?: Precedence;

  /**
   * The rank of the liturgical day.
   */
  rank?: Rank;

  /**
   * In addition to this liturgical day, allow similar items that have the same rank,
   * and the same or lower precedence,
   * so the current liturgical day will not overwrite another defined item.
   */
  allowSimilarRankItems?: boolean;

  /**
   * Holy days of obligation are days on which the faithful are expected to attend Mass,
   * and engage in rest from work and recreation.
   */
  isHolyDayOfObligation?: boolean;

  /**
   * The proper cycle in which the liturgical day is part: Proper of Time or Proper of Saints.
   */
  properCycle?: ProperCycle;

  /**
   * Specify a custom locale key for this date definition, in this calendar.
   */
  customLocaleKey?: LocaleKey;

  /**
   * The liturgical color(s) of the liturgical day.
   * @uniqueItems true
   */
  colors?: Color[];

  /**
   * The titles of the martyrology item.
   * @uniqueItems true
   */
  titles?: RomcalTitle[];

  /**
   * Link to one or multiple Saints, Blessed, or any other celebrations from the Martyrology catalog.
   * @uniqueItems true
   */
  martyrology?: MartyrologyItem[];

  /**
   * Apply for memorials only.
   * Specify if this LiturgicalDay is optional within a specific liturgical calendar.
   *
   * UNLY #14:
   * Memorials are either obligatory or optional; their observance is integrated into
   * the celebration of the occurring weekday in accordance with the norms set forth in the
   * General Instruction of the Roman Missal and of the Liturgy of the Hours
   *
   * Note: also used for the dedication of consecrated churches, which is an optional solemnity
   * that should not overwrite the default weekday.
   */
  isOptional?: boolean;

  /**
   * If this liturgical day must be removed from this calendar and from all those it inherits
   * (the parent calendars), on the final calendar generated by romcal.
   */
  drop?: boolean;

  /**
   * The ID of the calendar from which the liturgical day is defined.
   */
  fromCalendarId: CalendarId;

  seasons?: SeasonDef[];

  periods?: PeriodDef[];

  /**
   * The i18n definition
   */
  i18nDef?: i18nDef;

  /**
   * The day of the week.
   * Returns a number from 0 (Sunday) to 6 (Saturday).
   */
  dayOfWeek?: number; // 0 | 1 | 2 | 3 | 4 | 5 | 6;

  diff?: LiturgicalDayDiff[];
};

// export type LiturgicalDay = Pick<
//   LiturgicalDayDef,
//   | 'liturgicalDayId'
//   | 'dateDef'
//   | 'dateExceptions'
//   | 'precedence'
//   | 'rank'
//   | 'allowSimilarRankItems'
//   | 'isHolyDayOfObligation'
// > & {};

export type SeasonDef = {
  key: Season;

  /**
   * The name of the liturgical season.
   */
  name?: string;

  /**
   * The week number of the liturgical season.
   * Starts from `1`, except in the seasons of lent,
   * the week of Ash Wednesday to the next Saturday is count as `0`.
   */
  weekOfSeason?: number;

  /**
   * The day number within the whole season.
   */
  dayOfSeason?: number;

  /**
   * The psalter week cycle in which the liturgical day is part
   */
  psalterWeek?: PsalterWeekCycle;

  /**
   * The first day of the current liturgical season.
   */
  startOfSeason?: string;

  /**
   * The last day of the current liturgical season.
   */
  endOfSeason?: string;
};

export type SeasonMetadata = Required<SeasonDef>;

export type PeriodDef = {
  key: Period;
};

export type PeriodMetadata = Required<PeriodDef>;

export type LiturgicalDayDiff = {
  fromCalendarId: CalendarId;
  diff: DiffResult[];
};

export type DiffResult =
  | {
      op: 'add';
      path: (string | number)[];
      val: unknown;
    }
  | {
      op: 'update';
      path: (string | number)[];
      val: unknown;
      oldVal?: unknown;
    }
  | {
      op: 'delete';
      path: (string | number)[];
      val: unknown;
      oldVal?: unknown;
    };

/**
 * A liturgical day definition input.
 */
export type LiturgicalDayDefInput = Omit<
  LiturgicalDayDef,
  | 'liturgicalDayId'
  | 'dateDef'
  | 'rank'
  | 'dateExceptions'
  | 'colors'
  | 'titles'
  | 'martyrology'
  | 'fromCalendarId'
  | 'diff'
> & {
  /**
   * Date definition
   */
  dateDef?: DateDefInput;

  /**
   * Date definition exception
   * @uniqueItems true
   */
  dateExceptions?: DateDefException | DateDefException[];

  /**
   * The liturgical color(s) of the liturgical day.
   * @uniqueItems true
   */
  colors?: Color | Color[];

  /**
   * Redefine the titles of each Saints linked to this date definition, from the martyrology catalog.
   */
  titles?: TitlesDef;

  /**
   * Link one or multiple Saints, Blessed, or any other celebrations from the Martyrology catalog.
   * @uniqueItems true
   */
  martyrology?: MartyrologyItemPointer[];
};
